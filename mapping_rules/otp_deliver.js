// Copyright contributors to the IBM Verify Identity Access AAC Mapping Rules project.

// OTPDeliver mapping rule.

importClass(Packages.com.tivoli.am.fim.trustserver.sts.uuser.Attribute);

// Get the STS Universal User context attributes.

var stsuuCtxAttrs = stsuu.getContextAttributesAttributeContainer();

// Get the OTP type selected by the user.

var otpType = stsuuCtxAttrs.getAttributeValueByNameAndType("otp.sts.otp-method.otp-type", "otp.sts.type");

// If the OTP type is mac_otp, then generate the OTP hint and the formatted OTP. Other OTP types, such as hotp_otp, hotp_otp,
// and rsa_otp, do not deliver the OTP to the user.

if (otpType.equals("mac_otp")) {
    // Get the OTP generated by the OTP Provider plug-in.

    var otp = stsuuCtxAttrs.getAttributeValueByNameAndType("otp.sts.otp", "otp.sts.type");

    // Generate the OTP hint. OTP hint is data used to inform the user the OTP that the user must submit. OTP hint is sent to
    // the user together with the OTP as formatted OTP. OTP hint is displayed in OTP Login page.

    var otpHint = Math.floor(1000 + (Math.random() * 9000));

    // Generate the formatted OTP. Formatted OTP is sent to the user.

    var otpFormatted = otpHint + "-" + otp;

    // Set the OTP hint into STS Universal User context attributes.

    var ctxOTPHint = new Attribute("otp.sts.otp-hint", "otp.sts.type", otpHint);
    stsuuCtxAttrs.setAttribute(ctxOTPHint);

    // Set the formatted OTP into STS Universal User context attributes.

    var ctxOTPFormatted = new Attribute("otp.sts.otp-formatted", "otp.sts.type", otpFormatted);
    stsuuCtxAttrs.setAttribute(ctxOTPFormatted);
}